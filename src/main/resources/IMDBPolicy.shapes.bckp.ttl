@prefix schema: <http://schema.org/> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix save:  <http://example.com/privacy-policy-model/> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ppmprof: <http://example.com/privacy-policy-model/odrl-profile/> .
@prefix ns1:   <http://purl.org/vocab/vann/> .
@prefix svpr:  <http://www.specialprivacy.eu/vocabs/processing#> .
@prefix dct:   <http://purl.org/dc/terms/> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#> .
@prefix vann:  <http://purl.org/vocab/vann/> .
@prefix prov:  <http://www.w3.org/ns/prov#> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix svpu:  <http://www.specialprivacy.eu/vocabs/purposes#> .
@prefix cc:    <http://creativecommons.org/ns#> .
@prefix svd:   <http://www.specialprivacy.eu/vocabs/data#> .
@prefix save-ex: <http://example.com/privacy-policy-model/examples/> .
@prefix orcp:  <http://example.com/odrl:profile:regulatoryCompliance/> .
@prefix sw:    <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix dpv:   <http://www.w3.org/ns/dpv#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix spl:   <http://www.specialprivacy.eu/langs/usage-policy#> .
@prefix ex:    <http://example.org/shacl_examples#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix time:  <http://www.w3.org/2006/time#> .
@prefix odrl:  <http://www.w3.org/ns/odrl/2/> .
@prefix dash:  <http://datashapes.org/dash#> .

save-ex:RequestIMDBPolicy
        a                rdfs:Class , sh:NodeShape ;
        rdfs:label       "Requestsave-ex:IMDBPolicy" ;
        rdfs:subClassOf  save:RequestBase ;

        sh:rule          [ a             sh:SPARQLRule ;
                           rdfs:label    "Infer if $this is covered by orcp:Prohibition save-ex:IMDBProhibition8" ;
                           sh:condition  save:RequestBase ;
                           sh:condition  [ sh:property  [ sh:path    save:purposeList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:Purpose) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:actionList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:Processing) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:senderList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (save:Party) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:responsiblePartyList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (save:Party) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:hasDataSubjectList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:DataSubject) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:legalBasisList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (save:LegalBasis) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:processorList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:DataProcessor) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:recipientList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (save:Party) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:controllerList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:DataController) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:path    save:hasTechnicalOrganisationalMeasureList ;
                                                          sh:sparql  [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:TechnicalOrganisationalMeasure) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:condition  [ sh:property  [ sh:minCount  "1"^^xsd:int ;
                                                          sh:path      save:dataList ;
                                                          sh:sparql    [ sh:select  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n    SELECT  $this ?value\n        WHERE\n          { { SELECT $this  (SUM(if(?nIntersect, 1, 0)) AS ?nIntersectFinal)\n              WHERE\n                {   { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                          $this  $PATH  ?value .\n                          ?value (rdf:rest)*/rdf:first ?item .\n                          ?item rdf:type/(rdfs:subClassOf)* ?attrClass .\n                          BIND(( ?attrClass IN (dpv:Identifying) ) AS ?intersects)\n                        }\n                      GROUP BY $this\n                    }\n                  UNION\n                    { SELECT  $this (SUM(if(?intersects, 1, 0)) AS ?nIntersect)\n                      WHERE\n                        {\n                        BIND(NOT EXISTS { $this  $PATH  ?value } AS ?intersects) }\n                      GROUP BY $this\n                    }\n                }\n                group by $this\n            }\n            FILTER (?nIntersectFinal = 0)\n          }\n" ]
                                                        ]
                                         ] ;
                           sh:construct  "PREFIX  save-ex: <http://example.com/privacy-policy-model/examples/>\nPREFIX  orcp: <http://example.com/odrl:profile:regulatoryCompliance/>\nPREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX  owl:  <http://www.w3.org/2002/07/owl#>\nPREFIX  dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#>\nPREFIX  save: <http://example.com/privacy-policy-model/>\nPREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX  dpv:  <http://www.w3.org/ns/dpv#>\n\n\nCONSTRUCT {\n        ?bnode  a save-ex:RuleIntersection ;\n       save:dataIntersection ?dataItem ;\nsave:dataClassIntersection ?dataClass ;\n\n       save:rule save-ex:IMDBProhibition8 ;\n       save:answer \"prohibited\" .\n\n\n$this   save:prohibitedBy ?bnode .\n}\nWHERE {\nBIND(BNODE() AS ?bnode)\n{SELECT *\n   WHERE {\n       $this save:dataList ?dataVal .\n       ?dataVal rdf:rest*/rdf:first ?dataItem .\n       ?dataItem rdf:type/rdfs:subClassOf* ?dataClass .\n       FILTER (?dataClass IN (dpv:Identifying))\n    }\n    }\n\n}\n" ;
                           sh:order      "1"^^xsd:int
                         ] .
